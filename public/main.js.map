{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/about/about.component.css","webpack:///./src/app/about/about.component.html","webpack:///./src/app/about/about.component.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/contact/contact.component.css","webpack:///./src/app/contact/contact.component.html","webpack:///./src/app/contact/contact.component.ts","webpack:///./src/app/data-manager.service.ts","webpack:///./src/app/definition-create/definition-create.component.css","webpack:///./src/app/definition-create/definition-create.component.html","webpack:///./src/app/definition-create/definition-create.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/nav/nav.component.css","webpack:///./src/app/nav/nav.component.html","webpack:///./src/app/nav/nav.component.ts","webpack:///./src/app/not-found/not-found.component.css","webpack:///./src/app/not-found/not-found.component.html","webpack:///./src/app/not-found/not-found.component.ts","webpack:///./src/app/other-definition-create/other-definition-create.component.css","webpack:///./src/app/other-definition-create/other-definition-create.component.html","webpack:///./src/app/other-definition-create/other-definition-create.component.ts","webpack:///./src/app/schemas/ReqresDefiniton.ts","webpack:///./src/app/schemas/ReqresTermCreate.ts","webpack:///./src/app/schemas/ReqresTermCreateResponse.ts","webpack:///./src/app/schemas/ReqresTermOtherCreate.ts","webpack:///./src/app/schemas/ReqresTermOtherCreateResponse.ts","webpack:///./src/app/term-create/term-create.component.css","webpack:///./src/app/term-create/term-create.component.html","webpack:///./src/app/term-create/term-create.component.ts","webpack:///./src/app/term-detail/term-detail.component.css","webpack:///./src/app/term-detail/term-detail.component.html","webpack:///./src/app/term-detail/term-detail.component.ts","webpack:///./src/app/term-other-create/term-other-create.component.css","webpack:///./src/app/term-other-create/term-other-create.component.html","webpack:///./src/app/term-other-create/term-other-create.component.ts","webpack:///./src/app/term-other-detail/term-other-detail.component.css","webpack:///./src/app/term-other-detail/term-other-detail.component.html","webpack:///./src/app/term-other-detail/term-other-detail.component.ts","webpack:///./src/app/termsEnglish/termsEnglish.component.css","webpack:///./src/app/termsEnglish/termsEnglish.component.html","webpack:///./src/app/termsEnglish/termsEnglish.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n    width: 10px;\\n    height: 10px;\\n}\\n\\n/* resize images */\\n\\n.container img {\\n    width: 50%;\\n    height: 50%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCOztBQUVBLGtCQUFrQjs7QUFDbEI7SUFDSSxVQUFVO0lBQ1YsV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvYWJvdXQvYWJvdXQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xuICAgIHdpZHRoOiAxMHB4O1xuICAgIGhlaWdodDogMTBweDtcbn1cblxuLyogcmVzaXplIGltYWdlcyAqL1xuLmNvbnRhaW5lciBpbWcge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgaGVpZ2h0OiA1MCU7XG59Il19 */\"","module.exports = \"<h1>About this app</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <p>I created this my Courseera Honors Capstoone Project.\\n      The purpose of this app is to define or translate English words in Computer Science.\\n      We all are very different and belong to various regions of the world. Hence, it is okay to say that not many\\n      of us have English as our first language or our only language. So this app comes in place,\\n      when you want translation or define a word in other languages especially in the Computer field.</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n    \n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from \"./home/home.component\";\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from \"./contact/contact.component\";\nimport { NotFoundComponent } from \"./not-found/not-found.component\";\nimport { TermsEnglishComponent } from \"./termsEnglish/termsEnglish.component\";\nimport { TermDetailComponent } from './term-detail/term-detail.component';\nimport { TermOtherDetailComponent } from './term-other-detail/term-other-detail.component';\nimport { TermCreateComponent } from './term-create/term-create.component';\nimport { TermOtherCreateComponent } from './term-other-create/term-other-create.component';\nimport { DefinitionCreateComponent } from './definition-create/definition-create.component';\nimport { OtherDefinitionCreateComponent } from './other-definition-create/other-definition-create.component';\n\nconst routes: Routes = [\n  { path: 'home', component: HomeComponent },\n  { path: 'about', component: AboutComponent },\n  { path: 'contact', component: ContactComponent },\n  { path: 'termsEnglish/create', component: TermCreateComponent },\n  { path: 'termsEnglish', component: TermsEnglishComponent },\n  { path: 'termsEnglish/detail/:id', component: TermDetailComponent },\n  { path: 'termsEnglish/add-definition/:id', component: DefinitionCreateComponent },\n  { path: 'termsOther/create/:id', component: TermOtherCreateComponent },\n  { path: 'termsOther/detail/:id', component: TermOtherDetailComponent},\n  { path: 'termsOther/add-definition/:id', component: OtherDefinitionCreateComponent},\n  // more routes are added here\n  { path: '', redirectTo: '/home', pathMatch: 'full' },\n  { path: '**', component: NotFoundComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \".gap {\\n  margin-top: 5.0em;\\n}\\n\\ndiv b {\\n  color: rgb(42, 34, 155);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5nYXAge1xuICBtYXJnaW4tdG9wOiA1LjBlbTtcbn1cblxuZGl2IGIge1xuICBjb2xvcjogcmdiKDQyLCAzNCwgMTU1KTtcbn0iXX0= */\"","module.exports = \"<div class=\\\"container\\\">\\n  <app-nav></app-nav>\\n  <router-outlet></router-outlet>\\n  <hr class=\\\"gap\\\">\\n  <footer>\\n    <p>&copy; 2020 Paras Santra @ Inc</p>\\n  </footer>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'a2-web';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from \"@angular/forms\";\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavComponent } from './nav/nav.component';\nimport { NotFoundComponent } from './not-found/not-found.component';\nimport { HomeComponent } from './home/home.component';\nimport { AboutComponent } from './about/about.component';\nimport { ContactComponent } from './contact/contact.component';\nimport { TermsEnglishComponent } from './termsEnglish/termsEnglish.component';\nimport { TermDetailComponent } from './term-detail/term-detail.component';\nimport { TermOtherDetailComponent } from './term-other-detail/term-other-detail.component';\nimport { TermCreateComponent } from './term-create/term-create.component';\nimport { TermOtherCreateComponent } from './term-other-create/term-other-create.component';\nimport { DefinitionCreateComponent } from './definition-create/definition-create.component';\nimport { OtherDefinitionCreateComponent } from './other-definition-create/other-definition-create.component'\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavComponent,\n    NotFoundComponent,\n    HomeComponent,\n    AboutComponent,\n    ContactComponent,\n    TermCreateComponent,\n    TermsEnglishComponent,\n    TermOtherDetailComponent,\n    TermDetailComponent,\n    DefinitionCreateComponent,\n    TermOtherCreateComponent,\n    OtherDefinitionCreateComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbnRhY3QvY29udGFjdC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<h1>Contact information</h1>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-4\\\">\\n    <p>Contact information of the developer:</p>\\n    <dl class=\\\"dl-horizontal\\\">\\n      <dt>Developer name</dt>\\n      <dd>Paras Santra</dd>\\n      <dt>City</dt>\\n      <dd>Toronto</dd>\\n    </dl>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <p>\\n      <img src=\\\"./../../assets/paras.png\\\"/>\\n    </p>\\n  </div>\\n  \\n  <div class=\\\"col-md-4 well\\\">\\n    <p>Hi there, I am Paras Santra, a freelance Software Developer program. I like to play around with cool programming stuff. My interest are DS, algo, fullstack, ML amd datascience. Thanks for reading!\\n    </p>\\n  </div>\\n \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.css']\n})\nexport class ContactComponent implements OnInit {\n\n  // Create a \"Student\" object\n  s: Student = { name: \"Firstname Lastname\", id: \"123 456 789\", city: \"Toronto\" };\n\n  constructor() { }\n\n  ngOnInit() { }\n\n}\n\nclass Student {\n  name: string;\n  id: string;\n  city: string;\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from \"@angular/common/http\";\nimport { Observable, of } from \"rxjs\";\nimport { catchError, tap } from \"rxjs/operators\";\nimport {termEnglish} from './schemas/englishTerms';\nimport {otherTerms} from './schemas/otherTerms'\nimport { ReqresHelpResponse} from './schemas/ReqresHelpResponse';\nimport { ReqresTermCreate} from './schemas/ReqresTermCreate';\nimport { ReqresTermCreateResponse } from './schemas/ReqresTermCreateResponse';\nimport { ReqresTermOtherCreate} from './schemas/ReqresTermOtherCreate';\nimport { ReqresTermOtherCreateResponse } from './schemas/ReqresTermOtherCreateResponse';\nimport { definition} from './schemas/ReqresDefiniton';\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataManagerService {\n\n  constructor(private http: HttpClient) { }\n\n  private url: string = 'https://dict-api.herokuapp.com';\n\n  private httpOptions = {\n    headers: new HttpHeaders({\n      'Content-Type': 'application/json'\n    })\n  };\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      console.error(error);\n      return of(result as T);\n    };\n  }\n\n  getEnglishTerms() : Observable<termEnglish[]>{\n      return this.http.get<termEnglish[]>(`${this.url}/terms/english`);\n  }\n\n  getEnglishTermsByWord(word: String) : Observable<termEnglish[]>{\n    return this.http.get<termEnglish[]>(`${this.url}/terms/english/${word}`);\n  }\n\n  getEnglishTerm(id : String) : Observable<termEnglish>{\n    return this.http.get<termEnglish>(`${this.url}/term/english/${id}`);\n  }\n  getOtherTerm(id : String) : Observable<otherTerms>{\n    return this.http.get<otherTerms>(`${this.url}/term/other/${id}`);\n  }\n\n  getEnglishTermByWord(word : String) : Observable<termEnglish>{\n    return this.http.get<termEnglish>(`${this.url}/term/english/${word}`);\n  }\n\n  getOtherTermsByEnglishId(id : String) : Observable<otherTerms[]>{\n    return this.http.get<otherTerms[]>(`${this.url}/terms/other/${id}`);\n  }\n\n  incrementHelpNo(id: number): Observable< ReqresHelpResponse> {\n    return this.http.put< ReqresHelpResponse>(`${this.url}/terms/english/helpNo/${id}`, this.httpOptions)\n  }\n\n  incrementHelpYes(id: number): Observable< ReqresHelpResponse> {\n    return this.http.put< ReqresHelpResponse>(`${this.url}/terms/english/helpYes/${id}`, this.httpOptions)\n  }\n\n  incrementLikesOnDefinition(id: String): Observable< ReqresHelpResponse> {\n    return this.http.put< ReqresHelpResponse>(`${this.url}/terms/english/definition-like/${id}`, this.httpOptions)\n  }\n  incrementOtherHelpNo(id: number): Observable< ReqresHelpResponse> {\n    return this.http.put< ReqresHelpResponse>(`${this.url}/terms/other/helpNo/${id}`, this.httpOptions)\n  }\n\n  incrementOtherHelpYes(id: number): Observable< ReqresHelpResponse> {\n    return this.http.put< ReqresHelpResponse>(`${this.url}/terms/other/helpYes/${id}`, this.httpOptions)\n  }\n\n  incrementLikesOnOtherDefinition(id: String): Observable< ReqresHelpResponse> {\n    return this.http.put< ReqresHelpResponse>(`${this.url}/terms/other/definition-like/${id}`, this.httpOptions)\n  }\n\n  reqresTermAdd(newTerm: ReqresTermCreate): Observable<ReqresTermCreateResponse> {\n    return this.http.post<ReqresTermCreateResponse>(`${this.url}/terms/english`, newTerm, this.httpOptions)\n      .pipe(\n        tap((newTerm: ReqresTermCreateResponse) => console.log(`${newTerm}`)),\n        catchError(this.handleError<ReqresTermCreateResponse>('Term add'))\n      );\n  }\n\n  reqresTermOtherAdd(newTerm: ReqresTermOtherCreate): Observable<ReqresTermOtherCreateResponse> {\n    return this.http.post<ReqresTermOtherCreateResponse>(`${this.url}/terms/other`, newTerm, this.httpOptions)\n      .pipe(\n        tap((newTerm: ReqresTermOtherCreateResponse) => console.log(`${newTerm}`)),\n        catchError(this.handleError<ReqresTermOtherCreateResponse>('Other Term add'))\n      );\n  }\n\n  reqresDefinitonAdd(newDefiniton: definition, id: String): Observable<ReqresTermCreateResponse> {\n    return this.http.put<ReqresTermCreateResponse>(`${this.url}/terms/english/${id}/add-definition`, newDefiniton, this.httpOptions)\n      .pipe(\n        tap((newTerm: ReqresTermCreateResponse) => console.log(`${newTerm}`)),\n        catchError(this.handleError<ReqresTermCreateResponse>('Definition add'))\n      );\n  }\n\n  reqresDefinitonOtherAdd(newDefiniton: definition, id: String): Observable<ReqresTermOtherCreateResponse> {\n    return this.http.put<ReqresTermOtherCreateResponse>(`${this.url}/terms/other/${id}/add-definition`, newDefiniton, this.httpOptions)\n      .pipe(\n        tap((newTerm: ReqresTermOtherCreateResponse) => console.log(`${newTerm}`)),\n        catchError(this.handleError<ReqresTermOtherCreateResponse>('Definition add'))\n      );\n  }\n  \n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RlZmluaXRpb24tY3JlYXRlL2RlZmluaXRpb24tY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Add another definition\\r\\n  <span *ngIf=\\\"term.wordEnglish\\\">to {{term.wordEnglish}}</span>\\r\\n</h3>\\r\\n<p >&nbsp;</p>\\r\\n<div  class=\\\"row\\\">\\r\\n    <div  class=\\\"col-md-10 col-sm-10\\\">\\r\\n        <dl  class=\\\"dl-horizontal\\\"><dt >New definition</dt>\\r\\n            <dd >\\r\\n                <p >Enter data, and click/tap the Save button</p>\\r\\n                <form (ngSubmit)='definitionSave()' #f='ngForm'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"authorName\\\">Author Name:</label>\\r\\n                    <input class=\\\"form-control\\\" id=\\\"authorName\\\" name=\\\"authorName\\\" [(ngModel)]=\\\"newDefinition.authorName\\\" required minlength=\\\"3\\\"\\r\\n                      maxlength=\\\"100\\\" #authorName=\\\"ngModel\\\" autofocus>\\r\\n                  \\r\\n                    <div *ngIf='authorName.invalid && (authorName.dirty || authorName.touched)' class='alert alert-danger'>\\r\\n                      <div *ngIf='authorName.errors?.required'>Author Name is required, 3 to 100 characters</div>\\r\\n                      <div *ngIf='authorName.errors?.minlength'>Author Name must be at least 3 characters</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"definition\\\">Definition:</label>\\r\\n                    <textarea  class=\\\"form-control\\\" id=\\\"definition\\\" name=\\\"definition\\\" [(ngModel)]=\\\"newDefinition.definition\\\" required minlength=\\\"50\\\"\\r\\n                      maxlength=\\\"5000\\\" #definition=\\\"ngModel\\\" rows=\\\"5\\\" autofocus></textarea>\\r\\n                    <div *ngIf='definition.invalid && (definition.dirty || definition.touched)' class='alert alert-danger'>\\r\\n                      <div *ngIf='definition.errors?.required'>Definition is required, 50 to 5000 characters</div>\\r\\n                      <div *ngIf='definition.errors?.minlength'>Definition must be at least 50 characters</div>\\r\\n                    </div>\\r\\n                  </div>            \\r\\n                    <button  class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\" >Save</button>&nbsp; <a  class=\\\"btn btn-default\\\" routerLink=\\\"/termsEnglish/detail/{{term._id}}\\\">Cancel</a>\\r\\n                </form>\\r\\n            </dd>\\r\\n            <br >\\r\\n            <dt>Existing definitions<br ></dt>\\r\\n            <dd >\\r\\n              <div *ngFor=\\\"let def of term.definitions\\\" class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <button (click)=\\\"onClickDefLike(def._id)\\\" class=\\\"btn btn-default btn-sm\\\">Like&nbsp;&nbsp;<span class=\\\"badge\\\">{{def.likes}}</span></button>\\r\\n                  &nbsp;&nbsp;Author: {{def.authorName}} on {{def.dateCreated | date}}\\r\\n                </div> \\r\\n                <div class=\\\"panel-body\\\">\\r\\n                {{def.definition}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </dd>\\r\\n            <dt >Field of study</dt>\\r\\n            <dd >\\r\\n                <p >{{term.fieldOfStudy}}</p>\\r\\n            </dd>\\r\\n        </dl>\\r\\n    </div>\\r\\n</div>\\r\\n<div >\\r\\n    <hr ><a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to list</a>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataManagerService } from './../data-manager.service';\nimport { Router } from \"@angular/router\";\nimport { NgForm } from '@angular/forms';\nimport {termEnglish} from './../schemas/englishTerms';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ReqresTermCreateResponse } from './../schemas/ReqresTermCreateResponse';\nimport { definition} from './../schemas/ReqresDefiniton';\n\n@Component({\n  selector: 'app-definition-create',\n  templateUrl: './definition-create.component.html',\n  styleUrls: ['./definition-create.component.css']\n})\nexport class DefinitionCreateComponent implements OnInit {\n\n  newTermResult: ReqresTermCreateResponse;\n  newDefinition: definition;\n  term: termEnglish;\n\n  constructor(private m: DataManagerService, private router: Router, private route: ActivatedRoute) {\n    this.newDefinition = new definition();\n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.m.getEnglishTerm(id).subscribe(u => this.term= u);\n  }\n\n  definitionSave(): void {\n    let id = this.route.snapshot.params['id'];\n    let dateNow = new Date().toISOString();\n    this.newDefinition.dateCreated = dateNow;\n    this.m.reqresDefinitonAdd(this.newDefinition, id).subscribe((u) => {  this.router.navigate( [\"/termsEnglish/detail/\", u._id])});\n  }\n\n  onClickDefLike(defId: String){\n    this.m.incrementLikesOnDefinition(defId).subscribe(u => this.term= u);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"jumbotron\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <img width=\\\"150\\\" alt=\\\"Angular Logo\\\"\\n        src=\\\"./../../assets/techdict.png\\\">\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n      <h1>Tech Dictionary</h1>\\n      <h3></h3>\\n    </div>\\n  </div>\\n</div>\\n<!-- Body content -->\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <h3>Description</h3>\\n    <p>Hi, Welcome to Tech Disctionary!\\n      I created this app for my Courseera Honors Capstoone Project.\\n     The purpose of this app is to define or translate English words in Computer Science.\\n      \\n      We all are very different and belong to various regions of the world. Hence, it is okay to say that not many\\n      of us have English as our first language or our only language. So this app comes in place,\\n      when you want translation or define a word in other languages especially in the Computer field.\\n      <br/>\\n      <br/>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <h3>Getting help</h3>\\n    <p>If you have any questions or queries, you can reach me at parassantra@gmail.com</p>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".active {\\n  background-color: rgb(61,39,12) !important;\\n  color: white !important;\\n}\\n\\n.navbar-inverse{\\n  background-color: rgb(15,12,61);\\n  border-color: rgb(15,12,61);\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2L25hdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsMENBQTBDO0VBQzFDLHVCQUF1QjtBQUN6Qjs7QUFFQTtFQUNFLCtCQUErQjtFQUMvQiwyQkFBMkI7QUFDN0IiLCJmaWxlIjoic3JjL2FwcC9uYXYvbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYWN0aXZlIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDYxLDM5LDEyKSAhaW1wb3J0YW50O1xuICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbn1cblxuLm5hdmJhci1pbnZlcnNle1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTUsMTIsNjEpO1xuICBib3JkZXItY29sb3I6IHJnYigxNSwxMiw2MSk7XG59XG5cbiJdfQ== */\"","module.exports = \"<nav class=\\\"navbar navbar-inverse navbar-static-top\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\"\\n        data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n        <span class=\\\"sr-only\\\">Toggle navigation</span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n        <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"home\\\" routerLinkActive=\\\"active\\\">Home</a>\\n    </div>\\n    <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li><a routerLink=\\\"about\\\" routerLinkActive=\\\"active\\\">About</a></li>\\n        <li><a routerLink=\\\"contact\\\" routerLinkActive=\\\"active\\\">Contact</a></li>\\n        <li><a routerLink=\\\"termsEnglish\\\" routerLinkActive=\\\"active\\\">Terms</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25vdC1mb3VuZC9ub3QtZm91bmQuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Not found</h1>\\n<p>The requested content or task was not found.</p>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-not-found',\n  templateUrl: './not-found.component.html',\n  styleUrls: ['./not-found.component.css']\n})\nexport class NotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL290aGVyLWRlZmluaXRpb24tY3JlYXRlL290aGVyLWRlZmluaXRpb24tY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<h3>Add another definition\\r\\n  <span *ngIf=\\\"term.wordNonEnglish\\\">to {{term.wordNonEnglish}}</span>\\r\\n</h3>\\r\\n<p >&nbsp;</p>\\r\\n<div  class=\\\"row\\\">\\r\\n    <div  class=\\\"col-md-10 col-sm-10\\\">\\r\\n        <dl  class=\\\"dl-horizontal\\\"><dt >New definition</dt>\\r\\n            <dd >\\r\\n                <p >Enter data, and click/tap the Save button</p>\\r\\n                <form (ngSubmit)='definitionOtherSave()' #f='ngForm'>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"authorName\\\">Author Name:</label>\\r\\n                    <input class=\\\"form-control\\\" id=\\\"authorName\\\" name=\\\"authorName\\\" [(ngModel)]=\\\"newDefinition.authorName\\\" required minlength=\\\"3\\\"\\r\\n                      maxlength=\\\"100\\\" #authorName=\\\"ngModel\\\" autofocus>\\r\\n                  \\r\\n                    <div *ngIf='authorName.invalid && (authorName.dirty || authorName.touched)' class='alert alert-danger'>\\r\\n                      <div *ngIf='authorName.errors?.required'>Author Name is required, 3 to 100 characters</div>\\r\\n                      <div *ngIf='authorName.errors?.minlength'>Author Name must be at least 3 characters</div>\\r\\n                    </div>\\r\\n                  </div>\\r\\n                  <div class=\\\"form-group\\\">\\r\\n                    <label class=\\\"control-label\\\" for=\\\"definition\\\">Definition:</label>\\r\\n                    <textarea  class=\\\"form-control\\\" id=\\\"definition\\\" name=\\\"definition\\\" [(ngModel)]=\\\"newDefinition.definition\\\" required minlength=\\\"50\\\"\\r\\n                      maxlength=\\\"5000\\\" #definition=\\\"ngModel\\\" rows=\\\"5\\\" autofocus></textarea>\\r\\n                    <div *ngIf='definition.invalid && (definition.dirty || definition.touched)' class='alert alert-danger'>\\r\\n                      <div *ngIf='definition.errors?.required'>Definition is required, 50 to 5000 characters</div>\\r\\n                      <div *ngIf='definition.errors?.minlength'>Definition must be at least 50 characters</div>\\r\\n                    </div>\\r\\n                  </div>            \\r\\n                    <button  class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\" >Save</button>&nbsp; <a  class=\\\"btn btn-default\\\" routerLink=\\\"/termsOther/detail/{{term._id}}\\\">Cancel</a>\\r\\n                </form>\\r\\n            </dd>\\r\\n            <br >\\r\\n            <dt>Existing definitions<br ></dt>\\r\\n            <dd >\\r\\n              <div *ngFor=\\\"let def of term.definitions\\\" class=\\\"panel panel-default\\\">\\r\\n                <div class=\\\"panel-heading\\\">\\r\\n                  <button  (click) = \\\"onClickDefLike(def._id)\\\" class=\\\"btn btn-default btn-sm\\\">Like&nbsp;&nbsp;<span class=\\\"badge\\\">{{def.likes}}</span></button>\\r\\n                  &nbsp;&nbsp;Author: {{def.authorName}} on {{def.dateCreated | date}}\\r\\n                </div> \\r\\n                <div class=\\\"panel-body\\\">\\r\\n                {{def.definition}}\\r\\n                </div>\\r\\n              </div>\\r\\n            </dd>\\r\\n            <br/>\\r\\n            <dt >Field of study</dt>\\r\\n            <dd >\\r\\n                <p >\\r\\n                  {{term.fieldOfStudy}}\\r\\n                </p>\\r\\n            </dd>\\r\\n        </dl>\\r\\n    </div>\\r\\n</div>\\r\\n<div >\\r\\n    <hr ><a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to list</a>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataManagerService } from './../data-manager.service';\nimport { Router } from \"@angular/router\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ReqresTermOtherCreateResponse } from './../schemas/ReqresTermOtherCreateResponse';\nimport { definition} from './../schemas/ReqresDefiniton';\nimport { NgForm } from '@angular/forms';\nimport { otherTerms } from '../schemas/otherTerms';\n\n@Component({\n  selector: 'app-other-definition-create',\n  templateUrl: './other-definition-create.component.html',\n  styleUrls: ['./other-definition-create.component.css']\n})\nexport class OtherDefinitionCreateComponent implements OnInit {\n\n  newTermResult: ReqresTermOtherCreateResponse;\n  newDefinition: definition;\n  term: otherTerms;\n\n\n  constructor(private m: DataManagerService, private router: Router, private route: ActivatedRoute) {\n    this.newDefinition = new definition();\n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.m.getOtherTerm(id).subscribe(u => this.term= u);\n  }\n\n  definitionOtherSave(): void {\n    let id = this.route.snapshot.params['id'];\n    let dateNow = new Date().toISOString();\n    this.newDefinition.dateCreated = dateNow;\n    this.m.reqresDefinitonOtherAdd(this.newDefinition, id).subscribe((u) => {  this.router.navigate( [\"/termsOther/detail/\", u._id])});\n  }\n\n  onClickDefLike(defId: String){\n    this.m.incrementLikesOnOtherDefinition(defId).subscribe(u => this.term= u);\n  }\n\n}\n","export class definition\n{\n    authorName: String;\n    dateCreated: String;\n    definition :String;\n    quality :  Number;\n    likes : Number;\n}","import { definition } from './ReqresDefiniton';\n\nexport class ReqresTermCreate {\n    authorName: String;\n    wordEnglish: String;\n    wordExpanded: String;\n    fieldOfStudy: String;\n    definition: String;\n    linkAuthoritative: String;\n    linkWikipedia: String;\n    linkYouTube: String;\n    image: String;\n    imageType: String;\n    audio: String;\n    audioType: String;\n    helpYes: Number;\n    helpNo: Number;\n    wordNonEnglish : String;\n    languageCode: String;\n    dateCreated: String;\n    dateRevised: String;\n    definitions:definition[]\n  }","import { definition } from './ReqresDefiniton';\n\nexport class ReqresTermCreateResponse {\n    _id?: number;\n    authorName: String;\n    wordEnglish: String;\n    wordExpanded: String;\n    fieldOfStudy: String;\n    definition: String;\n    linkAuthoritative: String;\n    linkWikipedia: String;\n    linkYouTube: String;\n    image: String;\n    imageType: String;\n    audio: String;\n    audioType: String;\n    helpYes: Number;\n    helpNo: Number;\n    wordNonEnglish : String;\n    languageCode: String;\n    dateCreated: String;\n    dateRevised: String;\n    definitions:definition[];\n  }","import { definition } from './ReqresDefiniton';\n\nexport class ReqresTermOtherCreate {\n    authorName: String;\n    wordEnglish: String;\n    wordExpanded: String;\n    fieldOfStudy: String;\n    definition: String;\n    linkAuthoritative: String;\n    linkWikipedia: String;\n    linkYouTube: String;\n    image: String;\n    imageType: String;\n    audio: String;\n    audioType: String;\n    helpYes: Number;\n    helpNo: Number;\n    wordNonEnglish : String;\n    languageCode: String;\n    dateCreated: String;\n    dateRevised: String;\n    termEnglishId: String;\n    definitions:definition[];\n    \n  }","import { definition } from './ReqresDefiniton';\n\nexport class ReqresTermOtherCreateResponse {\n    _id?: number;\n    authorName: String;\n    wordEnglish: String;\n    wordExpanded: String;\n    fieldOfStudy: String;\n    definition: String;\n    linkAuthoritative: String;\n    linkWikipedia: String;\n    linkYouTube: String;\n    image: String;\n    imageType: String;\n    audio: String;\n    audioType: String;\n    helpYes: Number;\n    helpNo: Number;\n    wordNonEnglish : String;\n    languageCode: String;\n    dateCreated: String;\n    dateRevised: String;\n    termEnglishId: String;\n    definitions:definition[];\n  }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlcm0tY3JlYXRlL3Rlcm0tY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <h3>Create a new English term</h3>\\r\\n    <p>Enter data, and click/tap the Save button</p>\\r\\n    <form (ngSubmit)='termSave()' #f='ngForm'>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"authorName\\\">Author Name:</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"authorName\\\" name=\\\"authorName\\\" [(ngModel)]=\\\"newTerm.authorName\\\" required minlength=\\\"3\\\" maxlength=\\\"100\\\" #authorName=\\\"ngModel\\\" autofocus>\\r\\n        <div *ngIf='authorName.invalid && (authorName.dirty || authorName.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='authorName.errors?.required'>Author Name is required, 3 to 100 characters</div>\\r\\n          <div *ngIf='authorName.errors?.minlength'>Author Name must be at least 3 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"wordEnglish\\\">Term or word in English:</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"wordEnglish\\\" name=\\\"wordEnglish\\\" [(ngModel)]=\\\"newTerm.wordEnglish\\\" required minlength=\\\"3\\\"\\r\\n          maxlength=\\\"100\\\" #wordEnglish=\\\"ngModel\\\" autofocus>\\r\\n        <div *ngIf='wordEnglish.invalid && (wordEnglish.dirty || wordEnglish.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='wordEnglish.errors?.required'>Term or word in English is required, 3 to 100 characters</div>\\r\\n          <div *ngIf='wordEnglish.errors?.minlength'>Term or word in English must be at least 3 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"wordExpanded\\\">Expansion, if term or word (above) is an acronym or initialism:</label>\\r\\n        <input class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"wordExpanded\\\" maxlength=\\\"100\\\" minlength=\\\"3\\\" name=\\\"wordExpanded\\\" [(ngModel)]=\\\"newTerm.wordExpanded\\\" >\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"fieldOfStudy\\\">Field of Study:</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"fieldOfStudy\\\" name=\\\"fieldOfStudy\\\" [(ngModel)]=\\\"newTerm.fieldOfStudy\\\" required minlength=\\\"3\\\"\\r\\n          maxlength=\\\"100\\\" #fieldOfStudy=\\\"ngModel\\\" autofocus>\\r\\n        <div *ngIf='fieldOfStudy.invalid && (fieldOfStudy.dirty || fieldOfStudy.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='fieldOfStudy.errors?.required'>Field of Study is required, 3 to 100 characters</div>\\r\\n          <div *ngIf='fieldOfStudy.errors?.minlength'>Field of Study must be at least 3 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"definition\\\">Definition:</label>\\r\\n        <textarea  class=\\\"form-control\\\" id=\\\"definition\\\" name=\\\"definition\\\" [(ngModel)]=\\\"newDefinition.definition\\\" required minlength=\\\"50\\\"\\r\\n          maxlength=\\\"5000\\\" #definition=\\\"ngModel\\\" rows=\\\"5\\\" autofocus></textarea>\\r\\n        <div *ngIf='definition.invalid && (definition.dirty || definition.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='definition.errors?.required'>Definition is required, 50 to 5000 characters</div>\\r\\n          <div *ngIf='definition.errors?.minlength'>Definition must be at least 50 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"linkAuthoritative\\\">Link (URL), authoritative:</label>\\r\\n        <input [(ngModel)]=\\\"newTerm.linkAuthoritative\\\" class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"linkAuthoritative\\\" name=\\\"linkAuthoritative\\\" pattern=\\\"(http|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w.,@?^=%&amp;:/~+#()_-]*[\\\\w@?^=%&amp;/~+#()_-])?\\\" type=\\\"url\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"linkWikipedia\\\">Link (URL) on Wikipedia:</label>\\r\\n        <input [(ngModel)]=\\\"newTerm.linkWikipedia\\\"class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"linkWikipedia\\\" name=\\\"linkWikipedia\\\" pattern=\\\"(http|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w.,@?^=%&amp;:/~+#()_-]*[\\\\w@?^=%&amp;/~+#()_-])?\\\" type=\\\"url\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"linkYouTube\\\">Link (URL) on YouTube:</label>\\r\\n        <input [(ngModel)]=\\\"newTerm.linkYouTube\\\"class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"linkYouTube\\\" name=\\\"linkYouTube\\\" pattern=\\\"(http|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w.,@?^=%&amp;:/~+#()_-]*[\\\\w@?^=%&amp;/~+#()_-])?\\\" type=\\\"url\\\">\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\">Save</button>&nbsp;\\r\\n      <a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to list</a>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataManagerService } from './../data-manager.service';\nimport { Router } from \"@angular/router\";\nimport { NgForm } from '@angular/forms';\nimport { ReqresTermCreate } from './../schemas/ReqresTermCreate';\nimport { ReqresTermCreateResponse } from './../schemas/ReqresTermCreateResponse';\nimport { definition} from './../schemas/ReqresDefiniton';\n\n@Component({\n  selector: 'app-term-create',\n  templateUrl: './term-create.component.html',\n  styleUrls: ['./term-create.component.css']\n})\nexport class TermCreateComponent implements OnInit {\n\n  newTerm: ReqresTermCreate;\n  newTermResult: ReqresTermCreateResponse;\n  newDefinition: definition;\n\n  constructor(private m: DataManagerService, private router: Router) {\n    this.newTerm = new ReqresTermCreate();\n    this.newTermResult= new ReqresTermCreateResponse();\n    this.newDefinition = new definition();\n  }\n\n  ngOnInit() { \n  }\n \n  termSave(): void {\n    let dateNow = new Date().toISOString();\n    this.newTerm.languageCode ='en';\n    this.newTerm.dateCreated = dateNow;\n    this.newTerm.dateRevised = dateNow;\n    this.newDefinition.dateCreated = dateNow;\n    this.newDefinition.authorName = this.newTerm.authorName;\n    this.newTerm.definitions = new Array();\n    this.newTerm.definitions.push(this.newDefinition);\n    this.m.reqresTermAdd(this.newTerm).subscribe((u) => {  this.router.navigate( [\"/termsEnglish/detail/\", u._id])});\n  }\n\n}\n","module.exports = \"h3 {\\n    text-align: center;\\n    margin-bottom: 0;\\n  }\\n.btn-primary {\\n    background-color: rgb(61,39,12);\\n    border-color: rgb(61,39,12);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVybS1kZXRhaWwvdGVybS1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEI7QUFDRjtJQUNJLCtCQUErQjtJQUMvQiwyQkFBMkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC90ZXJtLWRldGFpbC90ZXJtLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDMge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4uYnRuLXByaW1hcnkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2MSwzOSwxMik7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoNjEsMzksMTIpO1xufSJdfQ== */\"","module.exports = \"<h3>English Term Detail\\r\\n  <span *ngIf=\\\"term.wordEnglish\\\">- {{term.wordEnglish}}</span>\\r\\n  <span *ngIf=\\\"term.wordExpanded\\\"> ({{term.wordExpanded}})</span>   \\r\\n</h3>\\r\\n<p>&nbsp;</p>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"term\\\">\\r\\n  <div class=\\\"col-md-10 col-sm-10\\\">\\r\\n    <dl class=\\\"dl-horizontal\\\">\\r\\n      <dt>Definitions\\r\\n        <br/>({{term.definitions.length}})\\r\\n        <br/>\\r\\n        <br/>\\r\\n        <a class=\\\"btn btn-primary btn-sm\\\" routerLink=\\\"/termsEnglish/add-definition/{{ term._id }}\\\">Add another</a>\\r\\n      </dt>\\r\\n      <dd>\\r\\n        <div *ngFor=\\\"let def of term.definitions\\\" class=\\\"panel panel-default\\\">\\r\\n          <div class=\\\"panel-heading\\\">\\r\\n            <button (click)=\\\"onClickDefLike(def._id)\\\" class=\\\"btn btn-default btn-sm\\\">Like&nbsp;&nbsp;<span class=\\\"badge\\\">{{def.likes}}</span></button>\\r\\n            &nbsp;&nbsp;Author: {{def.authorName}} on {{def.dateCreated | date}}\\r\\n          </div> \\r\\n          <div class=\\\"panel-body\\\">\\r\\n          {{def.definition}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </dd>\\r\\n      <dt>Field Of Study</dt>\\r\\n      <dd>{{ term.fieldOfStudy}}</dd>\\r\\n      <br/>\\r\\n      <dt>Author name</dt>\\r\\n      <dd>{{ term.authorName }}</dd>\\r\\n      <br/>\\r\\n      <dt>Dates</dt>\\r\\n      <dd>{{ term.dateCreated | date}} <br/>\\r\\n        {{ term.dateRevised | date}}\\r\\n      </dd>\\r\\n      <br/>\\r\\n      <dt>Translations</dt>\\r\\n      <dd>\\r\\n        <p>\\r\\n          <span><a class=\\\"btn btn-primary btn-sm\\\" routerLink=\\\"/termsOther/create/{{ term._id }}\\\">Add translation</a>&nbsp;&nbsp;</span>\\r\\n          <span *ngFor=\\\"let otherTerm of termsOther\\\" ><a routerLink=\\\"/termsOther/detail/{{ otherTerm._id }}\\\"class=\\\"btn btn-default btn-sm\\\">{{otherTerm.languageCode}}</a>&nbsp;&nbsp; </span>\\r\\n        </p>\\r\\n      </dd>\\r\\n      <br/>\\r\\n      <dt>Links</dt>\\r\\n      <dd>\\r\\n        <p>\\r\\n          <span *ngIf=\\\"term.linkWikipedia\\\"><a class=\\\"btn btn-default btn-sm\\\" target=\\\"_blank\\\" href= {{term.linkWikipedia}}>Wikipedia</a>&nbsp;&nbsp;</span>\\r\\n          <span *ngIf=\\\"term.linkYouTube\\\"><a class=\\\"btn btn-default btn-sm\\\" target=\\\"_blank\\\" href= {{term.linkYouTube}}>YouTube</a>&nbsp;&nbsp;</span>\\r\\n        </p>\\r\\n      </dd>\\r\\n      <br/>\\r\\n      <dt>Was this helpful?</dt>\\r\\n      <dd>\\r\\n        <p>\\r\\n          <button  (click)=\\\"onClickIncrementHelpYes()\\\" class=\\\"btn btn-default btn-sm\\\">Yes&nbsp;&nbsp;<span class=\\\"badge\\\">{{term.helpYes}}</span></button>&nbsp;&nbsp;\\r\\n          <button (click)=\\\"onClickIncrementHelpNo()\\\" class=\\\"btn btn-default btn-sm\\\">No&nbsp;&nbsp;<span class=\\\"badge\\\">{{term.helpNo}}</span></button>&nbsp;&nbsp;\\r\\n        </p>\\r\\n      </dd>\\r\\n    </dl>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"term\\\">\\r\\n  <hr>\\r\\n  <a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to list</a>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!term\\\">\\r\\n  <p>Cannot Find this Term</p>\\r\\n  <p><a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to list</a></p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport languageCodes from './../languageCodes/langCodes.json';\nimport { DataManagerService } from \"../data-manager.service\";\nimport { termEnglish} from \"../schemas/englishTerms\";\nimport { otherTerms} from \"../schemas/otherTerms\";\n\n@Component({\n  selector: 'app-term-detail',\n  templateUrl: './term-detail.component.html',\n  styleUrls: ['./term-detail.component.css']\n})\nexport class TermDetailComponent implements OnInit {\n\n  \n  term: termEnglish;\n  termsOther: otherTerms[];\n  languageCodes= languageCodes;\n\n  constructor(private m: DataManagerService, private route: ActivatedRoute) { \n   \n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.m.getEnglishTerm(id).subscribe(u => this.term= u);\n    this.m.getOtherTermsByEnglishId(id).subscribe((u) => {\n      this.termsOther= u;\n      for (let lang  of languageCodes) {\n        for (let term  of this.termsOther) {\n          if(term.languageCode === lang.languageCode){\n              term.languageCode = lang.language;\n          }\n        }\n      }\n\n    });\n  }\n\n  onClickIncrementHelpNo(){\n    let id = this.route.snapshot.params['id'];\n    this.m.incrementHelpNo(id).subscribe(u => this.term= u);\n  }\n\n  onClickIncrementHelpYes(){\n    let id = this.route.snapshot.params['id'];\n    this.m.incrementHelpYes(id).subscribe(u => this.term= u);\n  }\n\n  onClickDefLike(defId: String){\n    this.m.incrementLikesOnDefinition(defId).subscribe(u => this.term= u);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rlcm0tb3RoZXItY3JlYXRlL3Rlcm0tb3RoZXItY3JlYXRlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-md-8\\\">\\r\\n    <h3>Create a new translation for {{term.wordEnglish}}</h3>\\r\\n    <p>Enter data, and click/tap the Save button</p>\\r\\n    <form (ngSubmit)='termOtherSave()' #f='ngForm'>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label  class=\\\"control-label\\\" for=\\\"selectedLanguage\\\">Language:</label>\\r\\n        <select  class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"selectedLanguage\\\" name=\\\"selectedLanguage\\\" [(ngModel)]=\\\"newTerm.languageCode\\\">\\r\\n          <option *ngFor=\\\"let lang of languageCodes\\\"  [value]=\\\"lang.languageCode\\\">{{lang.language}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      \\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"authorName\\\">Author Name:</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"authorName\\\" name=\\\"authorName\\\" [(ngModel)]=\\\"newTerm.authorName\\\" required minlength=\\\"3\\\"\\r\\n          maxlength=\\\"100\\\" #authorName=\\\"ngModel\\\" autofocus>\\r\\n      \\r\\n        <div *ngIf='authorName.invalid && (authorName.dirty || authorName.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='authorName.errors?.required'>Author Name is required, 3 to 100 characters</div>\\r\\n          <div *ngIf='authorName.errors?.minlength'>Author Name must be at least 3 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"wordNonEnglish\\\">Term or word in English:</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"wordNonEnglish\\\" name=\\\"wordNonEnglish\\\" [(ngModel)]=\\\"newTerm.wordNonEnglish\\\" required minlength=\\\"3\\\"\\r\\n          maxlength=\\\"100\\\" #wordNonEnglish=\\\"ngModel\\\" autofocus>\\r\\n        <div *ngIf='wordNonEnglish.invalid && (wordNonEnglish.dirty || wordNonEnglish.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='wordNonEnglish.errors?.required'>Term or word in English is required, 3 to 100 characters</div>\\r\\n          <div *ngIf='wordNonEnglish.errors?.minlength'>Term or word in English must be at least 3 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"fieldOfStudy\\\">Field of Study:</label>\\r\\n        <input class=\\\"form-control\\\" id=\\\"fieldOfStudy\\\" name=\\\"fieldOfStudy\\\" [(ngModel)]=\\\"newTerm.fieldOfStudy\\\" required minlength=\\\"3\\\"\\r\\n          maxlength=\\\"100\\\" #fieldOfStudy=\\\"ngModel\\\" autofocus>\\r\\n        <div *ngIf='fieldOfStudy.invalid && (fieldOfStudy.dirty || fieldOfStudy.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='fieldOfStudy.errors?.required'>Field of Study is required, 3 to 100 characters</div>\\r\\n          <div *ngIf='fieldOfStudy.errors?.minlength'>Field of Study must be at least 3 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"definition\\\">Definition:</label>\\r\\n        <textarea  class=\\\"form-control\\\" id=\\\"definition\\\" name=\\\"definition\\\" [(ngModel)]=\\\"newDefinition.definition\\\" required minlength=\\\"50\\\"\\r\\n          maxlength=\\\"5000\\\" #definition=\\\"ngModel\\\" rows=\\\"5\\\" autofocus>\\r\\n        <textarea class=\\\"form-control ng-pristine ng-invalid ng-touched\\\" id=\\\"definition\\\" maxlength=\\\"5000\\\" minlength=\\\"50\\\" name=\\\"definition\\\" required=\\\"\\\" rows=\\\"5\\\"></textarea>\\r\\n        <div *ngIf='definition.invalid && (definition.dirty || definition.touched)' class='alert alert-danger'>\\r\\n          <div *ngIf='definition.errors?.required'>Definition is required, 50 to 5000 characters</div>\\r\\n          <div *ngIf='definition.errors?.minlength'>Definition must be at least 50 characters</div>\\r\\n        </div>\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"linkAuthoritative\\\">Link (URL), authoritative:</label>\\r\\n        <input [(ngModel)]=\\\"newTerm.linkAuthoritative\\\" class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"linkAuthoritative\\\" name=\\\"linkAuthoritative\\\" pattern=\\\"(http|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w.,@?^=%&amp;:/~+#()_-]*[\\\\w@?^=%&amp;/~+#()_-])?\\\" type=\\\"url\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"linkWikipedia\\\">Link (URL) on Wikipedia:</label>\\r\\n        <input [(ngModel)]=\\\"newTerm.linkWikipedia\\\"class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"linkWikipedia\\\" name=\\\"linkWikipedia\\\" pattern=\\\"(http|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w.,@?^=%&amp;:/~+#()_-]*[\\\\w@?^=%&amp;/~+#()_-])?\\\" type=\\\"url\\\">\\r\\n      </div>\\r\\n\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"control-label\\\" for=\\\"linkYouTube\\\">Link (URL) on YouTube:</label>\\r\\n        <input [(ngModel)]=\\\"newTerm.linkYouTube\\\"class=\\\"form-control ng-pristine ng-valid ng-touched\\\" id=\\\"linkYouTube\\\" name=\\\"linkYouTube\\\" pattern=\\\"(http|https)://[\\\\w-]+(\\\\.[\\\\w-]+)+([\\\\w.,@?^=%&amp;:/~+#()_-]*[\\\\w@?^=%&amp;/~+#()_-])?\\\" type=\\\"url\\\">\\r\\n      </div>\\r\\n\\r\\n      <button class=\\\"btn btn-primary\\\" type=\\\"submit\\\" [disabled]=\\\"!f.form.valid\\\">Save</button>&nbsp;\\r\\n      <a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to list</a>\\r\\n\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { DataManagerService } from './../data-manager.service';\nimport { Router } from \"@angular/router\";\nimport { NgForm } from '@angular/forms';\nimport languageCodes from './../languageCodes/langCodes.json';\nimport {termEnglish} from './../schemas/englishTerms';\nimport { ActivatedRoute } from \"@angular/router\";\nimport { ReqresTermOtherCreate } from \"./../schemas/ReqresTermOtherCreate\"\nimport { ReqresTermOtherCreateResponse } from \"./../schemas/ReqresTermOtherCreateResponse\"\nimport { definition } from \"./../schemas/ReqresDefiniton\"\n\n@Component({\n  selector: 'app-term-other-create',\n  templateUrl: './term-other-create.component.html',\n  styleUrls: ['./term-other-create.component.css']\n})\nexport class TermOtherCreateComponent implements OnInit {\n\n  newTerm: ReqresTermOtherCreate;\n  newTermResult: ReqresTermOtherCreateResponse;\n  newDefinition: definition;\n  term:termEnglish\n  languageCodes= languageCodes;\n\n  constructor(private m: DataManagerService, private router: Router, private route: ActivatedRoute) {\n    this.newTerm = new ReqresTermOtherCreate();\n    this.newTermResult= new ReqresTermOtherCreateResponse();\n    this.newDefinition = new definition();\n  }\n  \n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.m.getEnglishTerm(id).subscribe(u => this.term= u);\n    \n  }\n\n  termOtherSave(): void {\n    let dateNow = new Date().toISOString();\n    this.newTerm.dateCreated = dateNow;\n    this.newTerm.dateRevised = dateNow;\n    this.newDefinition.dateCreated = dateNow;\n    this.newDefinition.authorName = this.newTerm.authorName;\n    this.newTerm.definitions = new Array();\n    this.newTerm.definitions.push(this.newDefinition);\n    this.newTerm.termEnglishId = this.route.snapshot.params['id'];\n    this.newTerm.wordEnglish = this.term.wordEnglish;\n    this.m.reqresTermOtherAdd(this.newTerm).subscribe((u) => {  this.router.navigate( [\"/termsOther/detail/\", u._id])});\n  }\n}\n","module.exports = \"h3 {\\n    text-align: center;\\n    margin-bottom: 0;\\n  }\\n.btn-primary {\\n    background-color: rgb(61,39,12);\\n    border-color: rgb(61,39,12);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVybS1vdGhlci1kZXRhaWwvdGVybS1vdGhlci1kZXRhaWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEI7QUFDRjtJQUNJLCtCQUErQjtJQUMvQiwyQkFBMkI7QUFDL0IiLCJmaWxlIjoic3JjL2FwcC90ZXJtLW90aGVyLWRldGFpbC90ZXJtLW90aGVyLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaDMge1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBtYXJnaW4tYm90dG9tOiAwO1xuICB9XG4uYnRuLXByaW1hcnkge1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2MSwzOSwxMik7XG4gICAgYm9yZGVyLWNvbG9yOiByZ2IoNjEsMzksMTIpO1xufSJdfQ== */\"","module.exports = \"<h3>Other (Non-English) Term Detail\\r\\n  <span *ngIf=\\\"term.wordNonEnglish\\\"> {{term.wordNonEnglish}}</span>\\r\\n  <span *ngIf=\\\"term.wordExpanded\\\"> ({{term.wordExpanded}})</span>   \\r\\n</h3>\\r\\n<p>&nbsp;</p>\\r\\n\\r\\n<div class=\\\"row\\\" *ngIf=\\\"term\\\">\\r\\n  <div class=\\\"col-md-10 col-sm-10\\\">\\r\\n    <dl class=\\\"dl-horizontal\\\">\\r\\n      <dt>Definitions\\r\\n        <br/>({{term.definitions.length}})\\r\\n        <br/>\\r\\n        <br/>\\r\\n        <a class=\\\"btn btn-primary btn-sm\\\" routerLink=\\\"/termsOther/add-definition/{{ term._id }}\\\">Add another</a>\\r\\n      </dt>\\r\\n      <dd>\\r\\n        <div *ngFor=\\\"let def of term.definitions\\\" class=\\\"panel panel-default\\\">\\r\\n          <div class=\\\"panel-heading\\\">\\r\\n            <button  (click) = \\\"onClickDefLike(def._id)\\\" class=\\\"btn btn-default btn-sm\\\">Like&nbsp;&nbsp;<span class=\\\"badge\\\">{{def.likes}}</span></button>\\r\\n            &nbsp;&nbsp;Author: {{def.authorName}} on {{def.dateCreated | date}}\\r\\n          </div> \\r\\n          <div class=\\\"panel-body\\\">\\r\\n          {{def.definition}}\\r\\n          </div>\\r\\n        </div>\\r\\n      </dd>\\r\\n      <dt>Field Of Study</dt>\\r\\n      <dd>{{ term.fieldOfStudy}}</dd>\\r\\n      <br/>\\r\\n      <dt>Author name</dt>\\r\\n      <dd>{{ term.authorName }}</dd>\\r\\n      <br/>\\r\\n      <dt>Dates</dt>\\r\\n      <dd>{{ term.dateCreated | date}} <br/>\\r\\n        {{ term.dateRevised | date}}\\r\\n      </dd>\\r\\n      <br/>\\r\\n      <br/>\\r\\n      <dt>Links</dt>\\r\\n      <dd>\\r\\n        <p>\\r\\n          <span *ngIf=\\\"term.linkWikipedia\\\"><a class=\\\"btn btn-default btn-sm\\\" target=\\\"_blank\\\" href= {{term.linkWikipedia}}>Wikipedia</a>&nbsp;&nbsp;</span>\\r\\n          <span *ngIf=\\\"term.linkYouTube\\\"><a class=\\\"btn btn-default btn-sm\\\" target=\\\"_blank\\\" href= {{term.linkYouTube}}>YouTube</a>&nbsp;&nbsp;</span>\\r\\n        </p>\\r\\n      </dd>\\r\\n      <br/>\\r\\n      <dt>Was this helpful?</dt>\\r\\n      <dd>\\r\\n        <p>\\r\\n          <button  (click)=\\\"onClickIncrementHelpYes()\\\" class=\\\"btn btn-default btn-sm\\\">Yes&nbsp;&nbsp;<span class=\\\"badge\\\">{{term.helpYes}}</span></button>&nbsp;&nbsp;\\r\\n          <button (click)=\\\"onClickIncrementHelpNo()\\\" class=\\\"btn btn-default btn-sm\\\">No&nbsp;&nbsp;<span class=\\\"badge\\\">{{term.helpNo}}</span></button>&nbsp;&nbsp;\\r\\n        </p>\\r\\n      </dd>\\r\\n    </dl>\\r\\n  </div>\\r\\n</div>\\r\\n<div *ngIf=\\\"term\\\">\\r\\n  <hr>\\r\\n  <a routerLink=\\\"/termsEnglish/detail/{{term.termEnglishId}}\\\" class=\\\"btn btn-default\\\">Back to English Term</a>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"!term\\\">\\r\\n  <p>Cannot Find this Term</p>\\r\\n  <p><a routerLink=\\\"/termsEnglish\\\" class=\\\"btn btn-default\\\">Back to English Term</a></p>\\r\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from \"@angular/router\";\nimport languageCodes from './../languageCodes/langCodes.json';\nimport { DataManagerService } from \"../data-manager.service\";\nimport { termEnglish} from \"../schemas/englishTerms\";\nimport { otherTerms} from \"../schemas/otherTerms\";\n\n@Component({\n  selector: 'app-term-other-detail',\n  templateUrl: './term-other-detail.component.html',\n  styleUrls: ['./term-other-detail.component.css']\n})\nexport class TermOtherDetailComponent implements OnInit {\n\n  \n  term: otherTerms;\n  \n\n  constructor(private m: DataManagerService, private route: ActivatedRoute) { \n   \n  }\n\n  ngOnInit() {\n    let id = this.route.snapshot.params['id'];\n    this.m.getOtherTerm(id).subscribe(u => this.term= u);\n    console.log(this.term);\n  }\n\n  onClickIncrementHelpNo(){\n    let id = this.route.snapshot.params['id'];\n    this.m.incrementOtherHelpNo(id).subscribe(u => this.term= u);\n    \n  }\n\n  onClickIncrementHelpYes(){\n    let id = this.route.snapshot.params['id'];\n    console.log(\"Piku pagal hai\");\n    this.m.incrementOtherHelpYes(id).subscribe(u => this.term= u);\n  }\n\n  onClickDefLike(defId: String){\n    this.m.incrementLikesOnOtherDefinition(defId).subscribe(u => this.term= u);\n  }\n\n\n  \n\n}\n","module.exports = \".btn-primary {\\n    color: #fff;\\n    background-color: rgb(61,39,12);\\n    border-color:  rgb(61,39,12);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdGVybXNFbmdsaXNoL3Rlcm1zRW5nbGlzaC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksV0FBVztJQUNYLCtCQUErQjtJQUMvQiw0QkFBNEI7QUFDaEMiLCJmaWxlIjoic3JjL2FwcC90ZXJtc0VuZ2xpc2gvdGVybXNFbmdsaXNoLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuYnRuLXByaW1hcnkge1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYig2MSwzOSwxMik7XG4gICAgYm9yZGVyLWNvbG9yOiAgcmdiKDYxLDM5LDEyKTtcbn0iXX0= */\"","module.exports = \"<h3 class=\\\"form-inline\\\">List of English terms - search for...\\n  <input autofocus  (ngModelChange)=\\\"doSearch()\\\" [(ngModel)]=\\\"searchText\\\" class=\\\"form-control\\\" name=\\\"searchText\\\" placeholder=\\\"(3 or more characters)\\\" type=\\\"search\\\">&nbsp;\\n  <a class=\\\"btn btn-primary\\\" routerlink=\\\"/termsEnglish/create\\\" href=\\\"/termsEnglish/create\\\">Add new</a>\\n</h3>\\n<table class=\\\"table table-striped\\\">\\n  <thead>\\n    <tr>\\n      <th>Word</th>\\n      <th>Author</th>\\n      <th>Definition</th>\\n      <th>Field of study</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let t of termsEnglish\\\">\\n      <td><span>{{ t.wordEnglish }}</span></td>\\n      <td><span>{{ t.authorName }}</span></td>\\n      <td><span>{{ t.definitions[0].definition }}</span><span style=\\\"font-style: italic;\\\" *ngIf=\\\"t.definitions.length>1\\\"><br/>• {{t.definitions.length}} other definition(s)</span></td>\\n      <td>{{ t.fieldOfStudy }}</td>\\n      <td><span><a class=\\\"btn btn-default\\\" routerLink=\\\"/termsEnglish/detail/{{ t._id }}\\\">Detail</a></span></td>\\n    </tr>\\n    \\n  </tbody>\\n</table>\\n<p>&nbsp;</p>\\n<hr>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DataManagerService } from \"./../data-manager.service\";\n//import { Observable } from \"rxjs\";\nimport { termEnglish} from \"./../schemas/englishTerms\";\n\n@Component({\n  selector: 'app-termsEnglish',\n  templateUrl: './termsEnglish.component.html',\n  styleUrls: ['./termsEnglish.component.css']\n})\nexport class TermsEnglishComponent implements OnInit {\n\n  constructor(private m: DataManagerService) { }\n  termsEnglish: termEnglish[];\n  searchText:String;\n  \n  ngOnInit() {\n    this.searchText='';\n    this.m.getEnglishTerms().subscribe(t => this.termsEnglish = t)\n  }\n\n  doSearch(){\n    console.log(this.searchText.length)\n    if(this.searchText!==undefined && this.searchText.length >= 2){\n      this.m.getEnglishTermsByWord(this.searchText).subscribe(t => this.termsEnglish = t)  \n    }\n\n    if(this.searchText.length === 1){\n      this.m.getEnglishTerms().subscribe(t => this.termsEnglish = t) \n    }\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}